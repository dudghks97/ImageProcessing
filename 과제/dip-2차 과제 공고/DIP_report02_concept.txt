<영상처리 2차 과제>

프로그램 요약
1. 동영상 로드 후 트랙바 및 출력 윈도우 생성
2. 트랙바의 값 획득 및 영상 재생부
3. 히스토그램 평활화 시행
4. 언샤프 마스킹 시행여부 확인 후 출력
5. 키 입력 대기

4, 6

※ 총 진행도 체크 : 둘 다 기능은 하지만 완전하다고 볼수는없음.
   => 지속적인 고민이 필요함

# HE 와 UM을 시행
# HE 는 가중치가 존재함
# UM은 sigma와 scale 값을 설정해주어야함. scale 은 고주파 성분의 강도를 뜻함.
# 모든 처리는 영상을 재생하는 동안 이루어져야함 => loop 내부에 넣어서 각 프레임 별로 처리.
# TrackBar 사용
# 키 입력 처리에 대해 함수를 작성하자.
# 영상에 글자 삽입하는 루틴도 바꿔줘야할듯

※ HE
1. 트랙바와 영상을 같이 출력하는 것을 먼저 실시 -> 완료
2. 평활화를 먼저 적용 -> 완료
3. 트랙바를 통해 평활화 반영 비율을 조절
4. 가중평균 = 각 수치에 부여된 가중치의 합을 가중치의 합으로 나누어서 계산하는것

# 시행착오 1 : 가중치를 통한 평활화 비율 조절
1) 평활화 과정에서 가중치를 곱하는 방안
cdf = hist.cumsum() 에 가중치를 곱해보았음 x
mapping 에 가중치를 곱해보았음 x
위 두 경우는 영상이 어두워지기만 하였음

2) 분산함수를 구하는 과정에서 가중치를 곱하는 방안
np.histogram 함수에서 weigths 파라미터의 default 값이 무엇인가? : None => 실패

3) 가중 평균 식을 통하여 가중 평균 값을 얻어내고 이를 적용하는 방안
   식 자체에서 가중치의 의미가 없음. 같은 가중치를 사용함에 따라, 가중치 값이 소거가 됨
   => 트랙바로 가중치를 제어하는 의미가 없음.
   => 또한, 가중치 0을 선택할 경우, 분모가 0이 되어버림.

4) 가중 평균 식을 사용하려 하지 않고, 목표인 평활화의 반영 비율에 초점을 두어서 적용하는 방안
        # 원본영상 반영비율 조절
        frameCeq = np.clip((255*(weight * 0.01 * frameCeq/255)) + frameC, 0, 255).astype('uint8')
        결과는 비슷하게 나옴! 다만 밝기가 좀 더 밝다 정도. => 정답이 아님
        위에 대한 해결책
        frameCeq = np.clip((255 * (w * frameCeq/255)) + (255 * ((1-w) * frameC/255)), 0, 255).astype('uint8')
        원본 영상의 비율도 같이 조정. => 밝아지지는 않음. 그러나 가중평균이 적용되었다고 보기는 어려움.


# 스케일, 시그마 값 설정 관련 설명도 넣으면 좋을듯허고
   솔직히 그냥 영상보고 따라했음
   그러나 10, 20, 30 까지의 범위를 테스트 해보는 것 추천.

※ UM
1. 강의자료에 첨부되어있는 UM 소스코드를 참조하엿음
2. 처리 후, hconcat 의 과정에서 원본과 변환 후의 dtype 이 달라서 에러 발생 => 변환 후의 dtype을 frameC 와 같도록 처리하는 것으로 해결

※ 결과 분석
1. 가중치에 따른 HE 적용 비율 및 변화 고찰 - 0 50 100
2. sigma와 scale 에 따른 UM 변화 고찰 - sigma 0 1 3 7, scale 0 1 3 5